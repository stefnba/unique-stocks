


[tool.black]
line-length = 130
target-version = ['py311']

[tool.mypy]
mypy_path = "python"
no_implicit_optional = true
namespace_packages = false
warn_redundant_casts = true
warn_unreachable = true
warn_unused_ignores = true
disallow_any_generics = true
disallow_untyped_defs = true


[tool.ruff]
src = ['pyiceberg','tests']
extend-exclude = ["dev/provision.py"]
select = [
    "E", # pycodestyle
    "W", # pycodestyle
    "F", # Pyflakes
    "B", # flake8-bugbear
    "PIE", # flake8-pie
    "C4", # flake8-comprehensions
    "I", # isort
    "UP", # pyupgrade
]
ignore = ["E501","E203","B024","B028"]

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Exclude a variety of commonly ignored directories.
include = ["*.py", "*.pyi", "**/pyproject.toml", "*.ipynb"]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]
per-file-ignores = {}
# Ignore _all_ violations.
# Same as Black.
line-length = 130

# Assume Python 3.11.
target-version = "py311"

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true

[tool.ruff.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

[tool.ruff.isort]
detect-same-package = true
lines-between-types = 0
known-first-party = ["pyiceberg", "tests"]
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]


[tool.poetry]
name = "lakehouse"
version = "0.1.0"
description = ""
authors = ["Stefan Bauer <stefanjakob.bauer@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
pyiceberg = {version = "^0.5.1", extras = ["sql-postgres"]}


[tool.poetry.group.dev.dependencies]
black = "^23.12.1"
ruff = "^0.1.13"
mypy = "^1.8.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
