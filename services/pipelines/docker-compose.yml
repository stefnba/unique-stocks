version: '3.8'

x-airflow-common: &airflow-common
    build:
        context: .
        args:
            AIRFLOW_HOME: ${AIRFLOW_HOME:-/app/airflow}
            AIRFLOW_PROJ_DIR: ${AIRFLOW_PROJ_DIR:-./pipelines}
    env_file:
        - .env
    environment: &airflow-common-env
        AIRFLOW__WEBSERVER__SECRET_KEY: adsfasldfo3o3oifoawdoifo23eklksdflkasdSIADFUIY#
        AIRFLOW_HOME: ${AIRFLOW_HOME:-/app/airflow}
        AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${AIRFLOW_DB_USER}:${AIRFLOW_DB_PASSWORD}@airflow-postgres/${AIRFLOW_DB_NAME}
        PYTHONPATH: /app/airflow # allow packages from outside dags folder
    user: '${AIRFLOW_UID:-50000}:0'
    volumes:
        - ${AIRFLOW_PROJ_DIR:-./pipelines}/dags:${AIRFLOW_HOME:-/app/airflow}/dags
        - ${AIRFLOW_PROJ_DIR:-./pipelines}/logs:${AIRFLOW_HOME:-/app/airflow}/logs
        - ${AIRFLOW_PROJ_DIR:-./pipelines}/plugins:${AIRFLOW_HOME:-/app/airflow}/plugins
        - ${AIRFLOW_PROJ_DIR:-./pipelines}/include:${AIRFLOW_HOME:-/app/airflow}/include
    depends_on: &airflow-common-depends-on
        # redis:
        #     condition: service_healthy
        postgres:
            condition: service_healthy

services:
    airflow-webserver:
        <<: *airflow-common
        depends_on:
            - airflow-postgres
        ports:
            - '8080:8080'
        entrypoint: ${AIRFLOW_HOME:-/app/airflow}/airflow_init.sh
        restart: always

    airflow-scheduler:
        <<: *airflow-common
        command: scheduler
        depends_on:
            - airflow-webserver

    airflow-postgres:
        image: postgres:14.5-alpine
        ports:
            - '5418:5432'
        restart: always
        env_file:
            - .env
        environment:
            POSTGRES_USER: ${AIRFLOW_DB_USER}
            POSTGRES_PASSWORD: ${AIRFLOW_DB_PASSWORD}
            POSTGRES_DB: ${AIRFLOW_DB_NAME}
        healthcheck:
            test: ['CMD', 'pg_isready', '-U', 'airflow']
            interval: 5s
            retries: 5
        volumes:
            - airflow-postgres-data:/var/lib/postgresql/data/

    # redis:
    #     image: redis:latest
    #     expose:
    #         - 6379
    #     healthcheck:
    #         test: ['CMD', 'redis-cli', 'ping']
    #         interval: 5s
    #         timeout: 30s
    #         retries: 50
    #     restart: always

volumes:
    airflow-postgres-data:
